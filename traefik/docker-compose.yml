version: "3.3"

networks:
  proxy-backend:
   #    driver: overlay
    external: true
  external-net:
   # driver: overlay
    external: true

volumes:
  letsencrypt:

services:

  traefik:
    image: "traefik:v2.1"
    #restart: always
    #container_name: "traefik"
    networks:
      - external-net
      - proxy-backend 
    command:
      #- "--log.level=DEBUG"
      #- "--api.insecure=true"
      - "--api=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      #- "--providers.docker.swarmMode=true"
      - "--providers.file.directory=/config"
      - "--providers.file.watch=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.network=proxy-backend"
      # - "--entrypoints.other.address=:222"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email=username@example.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - "./config:/config"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`proxy.int.example.com`)"
      - "traefik.http.routers.api.service=api@internal"
        #- "traefik.http.services.api.loadbalancer.server.port=8080"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"
      - "traefik.http.middlewares.auth.basicauth.users=8nopeu"
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=web"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 30M
        reservations:
          cpus: '0.05'
          memory: 10M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      #placement:
      #  constraints:
      #    - "node.role == manager"
      #    - "node.labels.node-number==1"

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth
    networks:
      - proxy-backend
    environment:
      - DEFAULT_PROVIDER=oidc
      - PROVIDERS_OIDC_ISSUER_URL=https://cognito-idp.us-west-2.amazonaws.com/us-west-nope
      - PROVIDERS_OIDC_CLIENT_ID=3dfnope3ks
      - PROVIDERS_OIDC_CLIENT_SECRET=fksecret9s
      - SECRET=kserandomekeiskf
      #- INSECURE_COOKIE=true
      #- DOMAIN=yourcompany.com
      - LOG_LEVEL=debug
      # When using an auth host, the below must be added
    labels:
      - "traefik.enable=true"
        #- "traefik.http.routers.traefik-forward-auth"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"
 
      - "traefik.http.middlewares.traefik-auth.forwardauth.address=http://traefik-forward-auth:4181" 
      - "traefik.http.middlewares.traefik-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.traefik-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      #- traefik.frontend.rule=Host:auth.example.com
